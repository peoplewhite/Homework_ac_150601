Q: heap與stack的差別
A:
程式運作的時候，需要暫存資料到記憶體，存放位置分兩種，stack與heap。
stack：
  程式裡面有可預測何時能釋放與確定需要的量為多少的值，就存放到這裏。
  譬如：區域變數，function的變數...等等，當程式離開該變數的scope，系統便能自動以後進先
  出的方式釋放該值暫存的記憶體空間，無需工程師手動釋放。通常會發生問題的原因：迴圈run
  過頭，或是遞迴太深處便有可能發生stack overflow。只要注意迴圈停止的條件設定無誤，基本
  可解決此問題。
heap：
  程式有無法預測的機制，例如objective c 的物件，無法預測何時可釋放，也無法預測其需要
  的量，需要動態配置記憶體，便存放到heap。存放到heap的資料，當使用完，仍需工程師手動
  釋放，否則空間會一直佔用而無法存新值，終致heap overflow。使用上需要注意釋放的時機。
  但現今許多程式語言已支援Garbage Collection的機制。GC是當系統判斷該空間已經沒有在使用
  ，便會自動釋放。
